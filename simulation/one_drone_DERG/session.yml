name: simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - status:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch mrs_uav_status status.launch
  - switch:
      layout: tiled
      panes:
        - history -s rosservice call /uav1/control_manager/switch_tracker "BypassTracker"
        - history -s rosservice call /uav1/control_manager/switch_controller "So3ControllerInterns"
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; spawn_uav 1 --$UAV_TYPE --run --delete --enable-rangefinder
  - control:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch controllers_brubotics controllers_brubotics.launch; roslaunch trackers_brubotics trackers_brubotics.launch; roslaunch mrs_uav_general core.launch config_control_manager:=../../custom_configs/control_manager.yaml config_uav_manager:=../../custom_configs/uav_manager.yaml config_gain_manager:=../../custom_configs/gain_manager.yaml
  - automatic_start:
      layout: tiled
      panes:
         - waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - goto:
      layout: tiled
      panes:
        #'waitBeforeGoTo; sleep 10; rosservice call /$UAV_NAME/control_manager/goto "goal: [0.0, 0.0, 2.0, 0.0]"'
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
